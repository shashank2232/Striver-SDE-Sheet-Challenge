class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        // BRUTE: copy all elements from nums2 into nums1 and then sort nums1
        // TIME: O(NlogN)  SPACE: O(1)

        // OPTIMISE: 2-POINTER APPROACH  TIME= O(N) SPACE= O(1)
        int i = m+n-1;
        int p1 = m-1;
        int p2 = n-1;
        while(p2 >= 0){
            // if number in nums1 > number in nums2, put number of nums1 at ith index of nums1 & do i-- p1--
            if(p1 >=0 && nums1[p1] > nums2[p2]){
                nums1[i--] = nums1[p1--];
            }
            // if number in nums1 < number in nums2, put number of nums2 at ith index of nums1 & do i-- p2--  
            else{
                nums1[i--] = nums2[p2--];
            }
        }
    }
};